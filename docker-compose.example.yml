services:
  postgres:
    image: postgres:16
    container_name: plumberlama-postgres
    environment:
      POSTGRES_USER: plumberlama
      POSTGRES_PASSWORD: plumberlama_dev
      POSTGRES_DB: survey_data
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U plumberlama"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - plumberlama

  pipeline:
    build: .
    image: plumberlama:latest
    container_name: plumberlama-pipeline
    env_file:
      - .env
    environment:
      # Database connection (override if needed)
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: survey_data
      DB_USER: plumberlama
      DB_PASSWORD: plumberlama_dev
      # Output directory - site will be built in /app/site
      DOC_OUTPUT_DIR: /app/docs
    volumes:
      # Mount site output directory for web server
      - site_output:/app/site
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - plumberlama

  web:
    image: nginx:alpine
    container_name: plumberlama-web
    ports:
      - "8080:80"
    volumes:
      - site_output:/usr/share/nginx/html:ro
    environment:
      # Nginx will use default config which serves from /usr/share/nginx/html
      NGINX_HOST: localhost
      NGINX_PORT: 80
    depends_on:
      - pipeline
    networks:
      - plumberlama
    restart: unless-stopped

volumes:
  postgres_data:
  site_output:

networks:
  plumberlama:
    driver: bridge
